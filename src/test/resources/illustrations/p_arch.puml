@startuml

package "API" {
    class APIRequest {
        +fetchDataFromAPI(endpoint: String): String
    }
}

package "Service Layer" {
    class FixtureRequest {
        +getFixtureOdds(): FixtureOddsResponse
    }

    class SQLRequest
}

package "Model" {
    class Bet
    class Fixture {
        -id: int
        -teamA: String
        -teamB: String
        -date: Date
    }
    class FixtureBets
    class oddType
}

package "Response" {
    class FixtureOddsResponse {
        -fixtures: List<Fixture>
        -metadata: Metadata
        +FixtureOddsResponse(fixtures: List<Fixture>)
    }

    class SQLResponse
}

package "Controller" {
    class PrimaryController {
        +getFixtureOdds(): ResponseEntity<FixtureOddsResponse>
    }

    class FixtureBetsController
}

' Relationships
APIRequest --> FixtureRequest : fetches data
FixtureRequest --> FixtureOddsResponse : returns
FixtureRequest --> Fixture : transforms data into
FixtureOddsResponse --> Fixture : contains
PrimaryController --> FixtureRequest : invokes
PrimaryController --> FixtureOddsResponse : returns

' Future Extensions
package "User Management" {
    class User
    class UserEvent
    class SQLEvent
}

' Example of Future Relationships
PrimaryController --> User : manages
PrimaryController --> UserEvent : processes
PrimaryController --> SQLEvent : logs

@enduml
